pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- bar fight
-- by achiegamedev

-- actions being a 10 long array, where each element is an id to the move
--[[
Attack
Shield
Heal

Bite
Mock
Slap

Taunt
Evade
Aim

Cleanse
Pray
]]--
-- iconography
attack_icon = "‚óÜ"
shield_icon = "‚Å∂:1e121a0c00000000"
heal_icon = "‚ô•"

bite_icon = "‚Å∂:1e0a1e1400000000"
mock_icon = "üê±"
slap_icon = "‚Å∂:060f0f0700000000"

taunt_icon = "üòê"
evade_icon = "‚ñí"
aim_icon = "‚òâ"

cleanse_icon = "‚Å∂:0207020000000000"
pray_icon = "‚Å∂:0a0a1b0000000000"

poison_icon = "‚Å∂:0f050f0a00000000"
burn_icon = "‚Å∂:02040e0e00000000"
confusion_icon = "‚òÖ"

power_icon = "‚óÜ"
evasion_icon = "‚ñí"
accuracy_icon = "‚òâ"

action_icons = {attack_icon,shield_icon,heal_icon, bite_icon, mock_icon, slap_icon, taunt_icon, evade_icon, aim_icon, cleanse_icon, pray_icon}
effect_icons = {power_icon, evade_icon, accuracy_icon, poison_icon, burn_icon, confusion_icon}
effect_colors = {8, 6, 15, 11, 9, 10}
action_colors =  {2,13,14,3,9,6,1,1,1,3,12}
action_names = {"attack","shield","heal","bite","mock","slap","taunt","evade","aim","cleanse","pray",""}
action_desc = {"dmg 10+‚óÜ",
    "+10"..shield_icon,
    "+10"..heal_icon,
    "dmg 2+‚óÜ and\n".."30% +1"..poison_icon,
    "dmg 2+‚óÜ and\n".."30% +1"..burn_icon,
    "dmg 2+‚óÜ and\n 30% +1"..confusion_icon,
    "+5"..shield_icon.."and\n +1‚óÜ",
    "+5"..shield_icon.."and\n +1‚ñí",
    "+5"..shield_icon.."and\n +1‚òâ",
    "+5‚ô•\n -1 neg eff",
    "+5‚ô• +1‚óÜ"}

-- stats - strenght, dex, int
-- buffs - power, evasion, accuracy
-- debuffs - Poision, burn, confusion

-- effect aray is - buffs 1,2,3, thend debuff, 1, 2, 3





function add_floatint_text(text, x, y, lifetime)
    local text = {
        x = x,
        y = y,
        text = text,
        lifetime = lifetime
    }
    add(floating_texts, text)
end

function _init()
    player = {
        health = 100,
        max_health = 100,
        stats = {0,0,0},
        shield = 0,
        effects = {0,0,0,0,0,0},
        actions = {5,5,5,3,3,3,2,2,8,8}
    }

    enemy = {
        health = 100,
        max_health = 100,
        shield = 0,
        stats = {0,0,0},
        effects = {0,2,0,1,1,0},
        effects = {0,0,0,0,0,0},
        actions = {1,1,1,3,3,3,2,2,4,4},
        action_timer = 30,
        next_action = 0
    }

    hand_position = 0
    -- 0 left, 1 right
    hand_direction = 0
    action_cooldown = 0
    frame = 0
    floating_texts = {}
    fatigue_timer = 5400
    fatigue_count = 0
    game_over = false

    tooltip_time = 0
    tooltip_text = ""
    end_game_timer = 0

    enemy.next_action = rnd(enemy.actions)
    -- randomize player actions
    printh("player")
    randomize_action(player)
    printh("enemy")
    randomize_action(enemy)
    --randomize enemy actions
end 

function randomize_action(me)
    local action_list = {1,2,3,4,5,6,7,8,9,10,11}
    local rnd_act = del(action_list,rnd(action_list))
    local switch_chance = 0
    for i=1,10 do
        me.actions[i] = rnd_act
        if rnd() < switch_chance then
            rnd_act = del(action_list,rnd(action_list))
            switch_chance = 0
        else
            switch_chance += 0.33
        end
    end

    -- has damage move
    local had_damage_move = false
    for i=1,10 do
        local action = me.actions[i]
        if action == 1 or action == 4 or action == 5 or action == 6 then
            had_damage_move = true
        end
        if had_damage_move then break end
    end

    if not had_damage_move then
        local damage_move = rnd({1,4,5,6})
        local random_spot = rnd({1,2,3,4,5,6,7,8})
        local random_lenght = rnd({1,2,3})
        -- check if spot  + lenght is inside
        if random_spot+random_lenght > 10 then
            local sum = random_spot+random_lenght
            random_lenght -= sum - 10 
            --8 + 3 -> 11, we need to reduce random-lenght, by the diff between 10 and all
        end

        for i=random_spot,10 do
            me.actions[i] = damage_move
        end
    end 

end

function _update60()
    frame += 1
    if frame > 59 then
        frame = 0
    end
    if not game_over then
        if hand_direction == 0 then
            hand_position -= 1
            if hand_position <= 0 then
                hand_position = 0
                hand_direction = 1
            end
        elseif hand_direction == 1 then
            hand_position += 1
            if hand_position >= 100 then
                hand_position = 100
                hand_direction = 0
            end
        end
        --- execute action
        if btnp(5) then
            if action_cooldown == 0 then
                local index = flr((hand_position/10)+0.5)
                if index == 0 then index = 1 end
                --calculate confusion chance
                local did_action = execute_action(player.actions[index], player, enemy)
                tooltip_text = did_action and player.actions[index] or 99
                tooltip_time = 30
                action_cooldown = 30
                sfx(0)
            else
                sfx(1)
            end
        end

        action_cooldown = max(action_cooldown-1, 0)

        -- we need to execute the status conditions
        if frame % 30 == 0 then
            execute_stats_condition(enemy, true)
            execute_stats_condition(player, false)
        end

        if #floating_texts > 0 then
            for i=#floating_texts,1,-1 do
                local t = floating_texts[i]
                t.lifetime -= 1
                if t.lifetime <= 0 then
                    del(floating_texts, t)
                end
            end    
        end

        -- do enemy actions tuff
        enemy.action_timer = max(enemy.action_timer-1, 0)
        if enemy.action_timer == 0 then
            execute_action(enemy.next_action, enemy, player)
            enemy.next_action = rnd(enemy.actions)
            enemy.action_timer = rnd(80) + 80
            printh(enemy.next_action)
            printh(action_names[enemy.next_action])
        end

        fatigue_timer = max(fatigue_timer-1,0)
        if fatigue_timer <= 0 then
            -- fatigue damage
            if frame % 30 == 0 then
                apply_fatigue(enemy, fatigue_count)
                apply_fatigue(player, fatigue_count)
                fatigue_count += 1
            end
        end

        tooltip_time = max(tooltip_time-1, 0)
    end

    if (player.health < 0 or enemy.health < 0) and (not game_over) then
        game_over = true
        end_game_timer = 120
    end

    if game_over then
        end_game_timer = max(end_game_timer-1, 0)
    end

    if game_over and btnp(5) and end_game_timer == 0 then
        _init()
    end
end

function apply_fatigue(me, damage)
    local remainder = 0
    if me.shield > 0 then
        if me.shield > damage then 
            me.shield -= damage 
        else
            remainder = damage - me.shield
            me.shield = 0
        end
    else
        remainder = damage
    end
    me.health -= remainder
    local text = "\f8"..damage
    add_floatint_text(text, 64-#text*2, 72, 20)
end

function execute_stats_condition(me, isEnemy)
    local x = isEnemy and 70 or 50
    local effect_text = ""
    -- poision
    if me.effects[4] > 0 then
        me.health -= me.effects[4]
        effect_text..="\fb"..me.effects[4]
    end
    -- burn
    if me.effects[5] > 0 then
        local remainder = 0
        if me.shield > 0 then
            if me.shield > me.effects[5] then 
                me.shield -= me.effects[5] 
            else
                remainder = me.effects[5] - me.shield
                me.shield = 0
            end
        else
            remainder = me.effects[5]
        end
        me.health -= remainder
        effect_text..="\f9"..me.effects[5]
    end
    if #effect_text > 0 then
        add_floatint_text(effect_text, x, 70, 20)
    end
    -- burn
end

function execute_action(action_index, me, opponent)
    -- first calc if confusion get's in the way
    local confusion_chance = 5*me.effects[6]
    local action_execution_chance = 1-(confusion_chance/100)
    local can_execute_through_confusion = rnd() < action_execution_chance
    if can_execute_through_confusion then
        -- calculate evasion with accuracy
        -- 1, 2, 3, 4
        local chance = 1-(opponent.effects[2]/100)+(me.effects[3]/100)
        local can_hit = rnd() < chance

        -- calc melee damage
        local damage = 10 + ceil(me.effects[1]/2)
        -- check for crit
        if rnd() < 0.15 + me.effects[3]/10 then damage *= 1.5 end
        damage = ceil(damage)



        -- attack
        if action_index == 1 then
            if can_hit then
                -- calculate power (effect 1) and strenght (stat 1)
                opponent.health -= damage  
            end
        -- shield
        elseif action_index == 2 then
            me.shield += 10
        -- heal
        elseif action_index == 3 then
            me.health += 10
        -- bite
        elseif action_index == 4 then
            if can_hit then
                opponent.health -= ceil(damage/5)
                if rnd() < 0.3 + me.stats[2] then
                    opponent.effects[4] += 1
                end
            end
        -- mock
        elseif action_index == 5 then
            if can_hit then
                opponent.health -= ceil(damage/5)
                if rnd() < 0.3 + me.stats[3] then
                    opponent.effects[5] += 1
                end
            end
        -- slap
        elseif action_index == 6 then
            if can_hit then
                opponent.health -= ceil(damage/5)
                if rnd() < 0.3 + me.stats[1] then
                    opponent.effects[6] += 1
                end
            end
        -- taunt
        elseif action_index == 7 then
            me.shield += 2
            me.effects[1] += 1
        -- evade
        elseif action_index == 8 then
            me.shield += 2
            me.effects[2] += 1
        -- aim
        elseif action_index == 9 then
            me.shield += 2
            me.effects[3] += 1
        -- cleanse
        elseif action_index == 10 then
            me.health += 5
            me.health = min(me.health, me.max_health)
            local tries = 0
            local clensed_effect = false
            while (not clensed_effect) and tries < 999 do
                local effect_index = rnd({4,5,6})
                if me.effects[effect_index] > 0 then
                    me.effects[effect_index] -= 1
                    clensed_effect = true
                else
                    tries += 1
                end
            end
        --pray
        elseif action_index == 11 then
            me.health += 5
            me.effects[1] += 1
        --idk yet
        elseif action_index == 12 then

        end
    end

    return can_execute_through_confusion
end


function _draw()
    cls()
    local colors = {8,3}
    -- for now let's do a color bar
    for i=1,10 do
        print(action_icons[player.actions[i]], 24+(i-1)*8, 90, action_colors[player.actions[i]])
    end


    -- draw hand
    local hand_sprite = action_cooldown == 0 and 1 or 2
    draw_outline(hand_sprite, 24 + (hand_position/10)*8-2, 94, 1)
    print("‚ùé", 32 + (hand_position/10)*8-2, 96, 1)
    
    print_player_info(player, 20, false)
    print_player_info(enemy, 98, true)
    


    
    if fatigue_timer == 0 then
        local text = "\f8 fatigue"
        print(text, 64-#text*2, 64, 2)
    end

    for t in all(floating_texts) do
        print(t.text, t.x, t.y, 7)
    end

    -- print action and effect
    local index = flr((hand_position/10)+0.5)
    if index == 0 then index = 1 end
    local name = action_names[player.actions[index]]
    local eff = action_desc[player.actions[index]]
    print(name, 2, 100, action_colors[player.actions[index]])
    print(eff, 2, 108, action_colors[player.actions[index]])

    if game_over then
        local won = true
        if player.health < 0 then won = false end
        local text = won and "\^t\^wvictory" or "\^t\^wdefeat"
        local color = won and 11 or 8
        print("\#0"..text, 64-#text*2, 2, color)
        local start = "\^t\^w".."press ‚ùé/x"
        print("\#0"..start, 64-(#start+4)*2, 20, color)
    end

    if tooltip_time > 0 then
        local text = tooltip_text != 99 and action_names[tooltip_text] or "confused"
        local color = tooltip_text != 99 and action_colors[tooltip_text] or "8"
        print("\#0"..text,64-#text*2, 82, color)
    end

    print("v2", 120, 120, 1)
end

function print_player_info(entity, x, isEnemy)
    spr(48, x, 60, 1, 1, isEnemy)
    local print_index = 1
    for i=1,#entity.effects do
        if entity.effects[i] > 0 then
            print(effect_icons[i].." "..entity.effects[i], x, 60-(print_index*6), effect_colors[i])
            print_index+=1
        end
    end
    print(entity.health..heal_icon, x-5, 70, 8)
    print(entity.shield..shield_icon, x-5, 78, 6)

    if isEnemy then
        print(enemy.action_timer/60, x-4, 60-(print_index*6), action_colors[enemy.next_action])
        print_index+=1
        local text = action_names[enemy.next_action]
        print(action_icons[enemy.next_action]..text, x-#text*2, 60-(print_index*6), action_colors[enemy.next_action])
    end
end

function get_action()
    local index = flr((hand_position/10)+0.5)
    if index == 0 then index = 1 end
    return index
end



-- draw the myspr sprite at x and y with a 1 pixel
-- wide outline of clr. if clr is not given on the call
-- default 7 is used instead. thickness is how thick the outline
-- should be in pixels. defaults to 1 if none given
function draw_outline(myspr, x, y, clr, thickness, flip)
    -- nil check for the color parameter
    if clr == nil then clr = 7 end
    if thickness == nil then thickness = 1 end
    if flip == nil then flip = false end
    
    
    -- set color palette to outline
	for i=1,15,1 do
		pal(i, clr)
	end
	
    -- handle black outline transparency issues
    if clr == 0 then
        palt(0, false)
    end

    -- draw the sprite 9 times by 1-1 offsets
    -- in each direction. the created blob is 
    -- which is the sprite's outline 
    for i=-thickness,thickness do
        for j=-thickness,thickness do
            spr(myspr, x-i, y-j, 1, 1, flip, false)
        end
    end
    
    -- reset black color transparency
    if clr == 0 then
        palt(0, true)
    end

    -- reset color palette
	pal()

    -- draw the original sprite in the middle
    -- which causes the outline effect
	spr(myspr, x, y,  1, 1, flip, false)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000070000000d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000077676000dd5d50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700077777000ddddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000077770000dddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777000000000000777777777777777777000000777777777777777777000000000000000000000000000000000000000000000000
00000000000000777777777777000000000000777777777777777777000000777777777777777777000000000000000000000000000000000000000000000000
00000000000000777777777777000000000000777777777777777777000000777777777777777777000000000000000000000000000000000000000000000000
00000000000000777777777777000000000000777777777777777777000000777777777777777777000000000000000000000000000000000000000000000000
00000000000000777777777777000000000000777777777777777777000000777777777777777777000000000000000000000000000000000000000000000000
00000000000000777777777777000000000000777777777777777777000000777777777777777777000000000000000000000000000000000000000000000000
0000000000000077777777777700000000000077777700000077777700000077777700000077777700000000000033333333000000aa00000000000000000000
0000000000000077777777777700000000000077777700000077777700000077777700000077777700000000000033333333000000aa00000000000000000000
000000000000007777777777770000000000007777770000007777770000007777770000007777770000000000000033003300aaaaaaaaaa0000000000000000
000000000000007777777777770000000000007777770000007777770000007777770000007777770000000000000033003300aaaaaaaaaa0000000000000000
00000000000000777777777777000000000000777777000000777777000000777777000000777777000000000000333333330000aaaaaa000000000000000000
00000000000000777777777777000000000000777777000000777777000000777777000000777777000000000000333333330000aaaaaa000000000000000000
00000000000000777777000000777777000000777777777777777777000000777777777777000000000000000000330033000000aa00aa000000000000000000
00000000000000777777000000777777000000777777777777777777000000777777777777000000000000000000330033000000aa00aa000000000000000000
00000000000000777777000000777777000000777777777777777777000000777777777777000000000000000000000000000000000000000000000000000000
00000000000000777777000000777777000000777777777777777777000000777777777777000000000000000000000000000000000000000000000000000000
00000000000000777777000000777777000000777777777777777777000000777777777777000000000000000000000000000000000000000000000000000000
00000000000000777777000000777777000000777777777777777777000000777777777777000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777000000777777000000777777000000777777000000777777000000000000000000777777000000000000000000000000
00000000000000777777777777777777000000777777000000777777000000777777000000777777000000000000000000777777000000000000000000000000
00000000000000777777777777777777000000777777000000777777000000777777000000777777000000000000007777777777777700000000000000000000
00000000000000777777777777777777000000777777000000777777000000777777000000777777000000000000007777777777777700000000000000000000
00000000000000777777777777777777000000777777000000777777000000777777000000777777000000000000007777777777777700000000000000000000
00000000000000777777777777777777000000777777000000777777000000777777000000777777000000000000007777777777777700000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000099000000000000000000000000000000000000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000099000000000000000000000000000000000000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000000990000000088000000770077007700770000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000000990000000088000000770077007700770000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000099999900008888880000007700770077000000000000000000000000000000000000000000000000007777777777777700000000000000000000
00000000000099999900008888880000007700770077000000000000000000000000000000000000000000000000007777777777777700000000000000000000
00000000000099889900888888888800770077007700770000000000000000000000000000000000000000000000007777777777777700000000000000000000
00000000000099889900888888888800770077007700770000000000000000000000000000000000000000000000007777777777777700000000000000000000
00000000000099990000008888880000007700770077000000000000000000000000000000000000000000000000000000777777000000000000000000000000
00000000000099990000008888880000007700770077000000000000000000000000000000000000000000000000000000777777000000000000000000000000
00000000000000000000000088000000770077007700770000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000088000000770077007700770000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777777000000000000000000000000
00000000000000000000000077777777000000000000000000000000000000000000000000000000000000000000000077777777777700000000000000000000
00000000000000000000000077777777000000000000000000000000000000000000000000000000000000000000000077777777777700000000000000000000
00000000000000000000777777777777777700000000000000000000000000000000000000000000000000000000007777777777777700000000000000000000
00000000000000000000777777777777777700000000000000000000000000000000000000000000000000000000007777777777777700000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000777777777777777777000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000777700000000777777777777777777000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000777700000000777777777777777777000000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000077777777000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000077777777000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000077777700000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000077777700000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000007777000000000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000007777000000000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000000000000000000777777777777777777770000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000000000000000000777777777777777777770000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000777777777777777777770000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000777777777777777777770000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000777777777777777777770000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000777777777777777777770000000000000000
00000000000000000000777777777777777700000000000000000000007777000000000000000000000000000000777777777777777777000000000000000000
00000000000000000000777777777777777700000000000000000000007777000000000000000000000000000000777777777777777777000000000000000000
00000000000000000000000077777777000000000000000000000000777777770000000000000000000000007777000000000000000000000000000000000000
00000000000000000000000077777777000000000000000000000000777777770000000000000000000000007777000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000777777777777000000000000000000000000777777000000000000000077770000000000000000
00000000000000000000000000000000000000000000000000777777777777000000000000000000000000777777000000000000000077770000000000000000
00000000000000000000000000000000000000000000000077777777770000000000000000000000000000777777000000000000000077777700000000000000
00000000000000000000000000000000000000000000000077777777770000000000000000000000000000777777000000000000000077777700000000000000
00000000000000000000000000000000000000000000000077777777770000000000000000000000000000000000000000000000000077770000000000000000
00000000000000000000000000000000000000000000000077777777770000000000000000000000000000000000000000000000000077770000000000000000
00000000000000000000000077777777000000000000000000777777000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000077777777000000000000000000777777000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000077777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007777777777777777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000777777777777777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777777777777777777007700777777777777777777000000777777777777777777000000777777000000777777000000777777777777777777000000
00000000777777777777777777007700777777777777777777000000777777777777777777000000777777000000777777000000777777777777777777000000
00000000777777777777777777007700777777777777777777000000777777777777777777000000777777000000777777000000777777777777777777000000
00000000777777777777777777007700777777777777777777000000777777777777777777000000777777000000777777000000777777777777777777000000
00000000777777777777777777007700777777777777777777000000777777777777777777000000777777000000777777000000777777777777777777000000
00000000777777777777777777007700777777777777777777000000777777777777777777000000777777000000777777000000777777777777777777000000
00000000777777777777000000007700000000777777000000000000777777000000000000000000777777000000777777000000000000777777000000000000
00000000777777777777000000007700000000777777000000000000777777000000000000000000777777000000777777000000000000777777000000000000
00000000777777777777007777777777777700777777000000000000777777000000000000000000777777000000777777000000000000777777000000000000
00000000777777777777007777777777777700777777000000000000777777000000000000000000777777000000777777000000000000777777000000000000
00000000777777777777007777777777777700777777000000000000777777000000000000000000777777000000777777000000000000777777000000000000
00000000777777777777007777777777777700777777000000000000777777000000000000000000777777000000777777000000000000777777000000000000
00000000777777000000000000000000000000777777000000000000777777000000777777000000777777777777777777000000000000777777000000000000
00000000777777000000000000000000000000777777000000000000777777000000777777000000777777777777777777000000000000777777000000000000
00000000777777000000000000000000000000777777007700000000777777000000777777000000777777777777777777000000000000777777000000000000
00000000777777000000000000000000000000777777007700000000777777000000777777000000777777777777777777000000000000777777000000000000
00000000777777007700000000000000000000777777000000000000777777000000777777000000777777777777777777000000000000777777000000000000
00000000777777007700000000000000000000777777000000000000777777000000777777000000777777777777777777000000000000777777000000000000
00000000777777007777000000000000777777777777777777000000777777777777777777000000777777000000777777000000000000777777000000000000
00000000777777007777000000000000777777777777777777000000777777777777777777000000777777000000777777000000000000777777000000000000
00000000777777007777000000000000777777777777777777000000777777777777777777000000777777000000777777000000000000777777000000000000
00000000777777007777000000000000777777777777777777000000777777777777777777000000777777000000777777000000000000777777000000000000
00000000777777007700000000000000777777777777777777000000777777777777777777000000777777000000777777000000000000777777000000000000
00000000777777007700000000000000777777777777777777000000777777777777777777000000777777000000777777000000000000777777000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__sfx__
000100000000016050150501505016050180501b0501e050230502505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020000110500f0500e0500c050050500000000000000000000000000000000000000000000000000000000000002f0000000000000000000000000000000000000000000000000000000000000000000000000
000400000c6500a650066500565000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
